# docker-compose.yml
# Adds the new dashboard service to the stack.

version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  jobmanager:
    image: apache/flink:1.15.2-scala_2.12-java11
    container_name: jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager

  taskmanager:
    image: apache/flink:1.15.2-scala_2.12-java11
    container_name: taskmanager
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager

  sumo_runner:
    build:
      context: .
      dockerfile: Dockerfile.sumo
    container_name: sumo_runner
    depends_on:
      - kafka
    ports:
      - "8813:8813"
    restart: on-failure

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.sumo # We can reuse the same image as it has Python and our libs
    container_name: dashboard
    depends_on:
      - kafka
    ports:
      - "8000:8000" # Expose web server port
    command: uvicorn src.dashboard.dashboard_backend:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./src:/app/src # Mount source code to allow for hot-reloading
